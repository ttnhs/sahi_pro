function onScriptError($e) {
	return onScriptErrorDefault($e);
}
function onScriptFailure($e) {
	onScriptFailureDefault($e);
}


function onScriptErrorDefault($e) {
	if ($e.isBrowserNotResponding) {
		if (!_isPhantomJS()) {
			_takeScreenShot();
			dumpWindowInfo();
		}
	} else {
//		_takeScreenShot(); // uncomment this if you want a full desktop screenshot too.
		_lockWindow();
		_focusWindow();
		_takePageScreenShot();
		_unlockWindow();
	}
	return false;
}

function onScriptFailureDefault($e) {
	if ($e.isBrowserNotResponding) {
		if (!_isPhantomJS()) {
			_takeScreenShot();
			dumpWindowInfo();
		}
	} else {
//		_takeScreenShot(); // uncomment this if you want a full desktop screenshot too.
		_lockWindow();
		_focusWindow();
		_takePageScreenShot();
		_unlockWindow();
	}
}

function dumpWindowInfo() {
	var s = "<pre>";
	var info = _getWindows();
	for (var i=0; i<info.length; i++) {
		var w = info[i];
		s += "\n-------------------\nWindow " + i + ":\n-------";
		s += "\n  windowName: " + w.windowName;
		s += "\n  derivedName:" + w.derivedName;
		s += "\n  windowTitle:" + w.windowTitle;
		s += "\n  windowURL:" + w.windowURL;
		s += "\n  wasOpened:" + w.wasOpened + " (" + (w.wasOpened == 1 ? "popup window" : "base window") + ")";
		s += "\n  domain:" + w.domain;
		var initDate = new Date(parseFloat(w.initialTime));
		var lastDate = new Date(parseFloat(w.lastTime));
		var currentDate = new Date();
		s += "\n  initialTime:" + initDate.toUTCString();
		s += "\n  lastTime:" + lastDate.toUTCString();
		s += "\n  currentTime:" + currentDate.toUTCString();
		s += "\n  Last communication:" +  (currentDate - lastDate) + " ms ago"; 
	}
	s += "</pre>";
	_sahi._log(s);
}