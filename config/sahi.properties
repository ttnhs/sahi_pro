!**
! * Copyright Tyto Software Pvt. Ltd.
! **
# Sahi configuration file

proxy.port=9999

script.extension=sah;sahi;inc;xls;xlsx;js;s.csv

# dirs. Relative paths are relative to userdata dir. Separate directories with semi-colon
scripts.dir=scripts;
# default log directory.
logs.dir=logs
# Directory where auto generated ssl cerificates are stored
certs.dir=certs


# Use external proxy server for http

ext.http.proxy.pac.url=

ext.http.proxy.enable=true
ext.http.proxy.host=10.10.10.10
ext.http.proxy.port=8080
ext.http.proxy.auth.enable=false
ext.https.proxy.auth.encrypted=true
ext.http.proxy.auth.name=username
ext.http.proxy.auth.password=password

#Remote access allowed on Configuration
configuration.allow_remote_access=false

# Use external proxy server for https
ext.https.proxy.enable=true
ext.https.proxy.host=10.10.10.10
ext.https.proxy.port=8080
ext.https.proxy.auth.enable=false
ext.https.proxy.auth.encrypted=true
ext.https.proxy.auth.name=username
ext.https.proxy.auth.password=password

# There is only one bypass list for both secure and insecure.
ext.http.both.proxy.bypass_hosts=localhost|127.0.0.1|*.internaldomain.com

# Set the size of buffer for buffered input streams
io.buffer_size=8192

# Sets the hotkey which when pressed and doubleclicked,
# will open the Sahi controller window.
# Can specify ALT, SHIFT, CTRL or META
controller.hotkey=ALT

# Time (in milliseconds) between tests. Increase this if you get random connection refused exceptions or if tests hang after some time. units milliseconds
suite.time_between_tests=1000
# set suite.global_variables to true if you want variables set via _setGlobal to be accessible across tests in a suite. Advisable to keep false.
suite.global_variables=true

# Script execution params

#Time (in milliseconds) delay between steps
script.time_between_steps=100
#Time (in milliseconds) delay between retries once an error occurs
script.time_between_steps_on_error=2000
#Number of retries once an error occurs
script.max_reattempts_on_error=5
#Number of cycles Sahi will wait for the page to load before it proceeds with execution
#Time spent is (script.max_cycles_for_page_load x script.time_between_steps) milliseconds
script.max_cycles_for_page_load=1200
#No of times Sahi should wait for stability of AJAX and page loads before continuing. min value is 1
script.stability_index=5
#Max number of polls from a window or domain (say win A) after which a non existent window (win B) is declared as missing.
#Increase if a popup window or domain appears only after a long time. Generally should not be tweaked.  
script.max_count_for_popup_or_domain_wait=500

#Time waited for process to start before collecting PIDs. If browser does not get killed properly at end of test, increase this.
script.max_time_for_pid_gather=10000
dashboard.max_time_for_pid_gather=5000
kill.max_time_for_pid_gather_before_kill=60000
browser.max_relaunch_count=0
browser.max_wait_count_for_available_thread_from_dashboard=30

# For automatic SSL keystore creation.
ssl.auto_create_keystore=true
# Set the algorithm. Example: For Sun's JDK use SunX509, for IBM use IbmX509
ssl.algorithm=SunX509
ssl.password=sahipassword
# Full file path to keytool utility if not in the system path
# This is generally in the <java_home>/bin directory
# On windows, keytool path, if specified, should have double backslashes without encompassing quotes. Eg. 
# keytool.path=D:\\java path\\bin\\keytool.exe
keytool.path=keytool
jarsigner.path=jarsigner

http.keep_alive=true

proxy.remote_socket_timeout=120000

# If you want to login as multiple users via ntlm, keep this false. 
# To authenticate automatically using windows credentials, set it to true. (fixed v6.0.1)
java.ntlm.transparent_authentication.enabled=true

ff.profiles.template=config/ff_profile_template
ff.profiles.dir=browser/ff/profiles
ff.profiles.prefix=sahi
ff.profiles.max_number=30

# Favicons are replaced with Sahi's favicon. Helps easily see if the website is through Sahi
# Set to false if original favicons need to be seen
response.modify_favicon=true

# Sahi modifies ActiveX calls to monitor AJAX requests on older versions of IE 
response.modify_activex=true

debug.traffic.log.unmodified=false
debug.traffic.log.modified=false

# Set this to true if Sahi should not click or do other actions on 
# elements (like menu items) which are not visible
element.visibility_check.strict=false

# Set this to true if files should automatically be downloaded when the Content-disposition response header is "attachment" 
download.download_if_contentdisposition_is_attachment=true
download.contentdispostion.override_contenttypes=text/javascript,application/json,application/x-javascript

# Set this to 2 if browser seems to be idle for a long time during to AJAX calls.
# Use 1,2,3 for ZK apps. Just 2 for gmail (and comet based applications).
# Can be controlled in the script using _sahi.waitWhenReadyState1, _sahi.waitWhenReadyState2, _sahi.waitWhenReadyState3
xhr.wait_ready_states=1,2,3

#Default wait time for request in ready state 1.
xhr.wait_ready_state_1=1000

# Set this to true if you want 401 responses in Ajax calls to be returned as is.
# Setting this to false will cause a custom Sahi 401 page to be returned with status 200.
# NOTE that this is applicable only for Ajax requests. For non Ajax requests, a custom Sahi 401 page
# will always be returned with status 200.  
xhr.return_401_response=true

#Mark this property false to turn off Sahi XHR(AJAX) wrapper
xhr.wrapping.enabled=true

# This is the first n bytes of response data used to determine response type. 
# Change this to some other nearby value if you get "java.io.IOException: Resetting to invalid mark" errors on the console  
response.sample_length=400

# Uncomment the following lines to use a client certificate.
# If there is no password, do not uncomment the password line.
# keystore type can be JKS, PKCS12 etc. 
#ssl.client.keystore.type=JKS
#ssl.client.cert.path=certs/sahi_example_com
#ssl.client.cert.password=sahipassword

# Specifies the controller to be used
# Takes java, ruby and sahi as valid values; default is sahi
# Set this to java for recorder in java mode.
controller.mode=sahi

# Set Rhino optimizationLevel. 
# Change to -1 to beat 64K script limit. This will reduce performance though.
rhino.optimization_level=-1

# Set to true to escape unicode characters to \u00xx syntax
script.escape_unicode=false

# Turns on/off some filters. Used for debugging pages which do not render properly through proxy.
filters.addCharacterFilter=true
filters.addJSModifierFilter=true
filters.addHTMLModifierFilter=true

# Common domain on which cookies are set. Use sahi.example.com
sahi.common_domain=sahi.example.com

# Patterns of auto generated ids can be added here. If an id matches this expression Sahi will not consider it for its accessor.
recorder.ignorable_ids.pattern=^z_|^j_id|[:]j_id|^ext[-]gen|^[:]|^zk_comp_|^gwt[-]uid|^ext[-]comp|^x[-]auto|^[a-z0-9][A-Z0-9][a-zA-Z0-9][A-Z0-9][a-z0-9]

# Simulation specific properties
simulation.chrome.explicit_checkbox_radio_toggle=true

# Injection point
sahi.inject.force_treat_as_xhtml=false
# Set handle_conditional_html_comments=true to inject at the right place when IE conditional comments are used
sahi.inject.handle_conditional_html_comments=true
# Set handle_xua_ie_meta_tag=true to inject after the xua ie meta tag
sahi.inject.handle_xua_ie_meta_tag=true
# If there is a script tag above head tag, inject before the script tag
sahi.inject.before_first_script_tag=true

# Database logging. 
# Tables are created using 
# sahi/userdata/config/db/create_report_tables_mysql.sql for mysql database 
# sahi/userdata/config/db/create_report_tables_h2.sql for h2 database

# Enable DB connection pooling 
db.connection_pool.enabled=true
# Log reports in separate thread
db.reports.persist_async=true

# Specifies database type.
# The inbuilt options are "mysql", "mssql" and "h2"
# Change jdbc parameters accordingly
db.type=h2
#JDBC parameters for h2 database
db.driver_name=org.h2.Driver
db.jdbc_url=jdbc:h2:$userDir/database/db0;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE
db.user_name=sa
db.password=

#JDBC parameters for mysql database
#db.driver_name=com.mysql.jdbc.Driver
#db.jdbc_url=jdbc:mysql://localhost/sahireports?allowMultiQueries=true&sessionVariables=sql_mode=NO_BACKSLASH_ESCAPES&zeroDateTimeBehavior=convertToNull
#db.user_name=root
#db.password=

#JDBC parameters for mssql database
#db.driver_name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#db.jdbc_url=jdbc:sqlserver://localhost:1433;databaseName=sahireports
#db.user_name=sa
#db.password=abcd123

db.script_gen_xsl=$userDir/config/db/script_sql_gen.xsl

# Object Repository settings
script.object_repository.enable=false
script.object_repository.filepath=scripts/objectRepository.sah

# QC Configuration
plugin.qc.qc_script = qualitycenter/sahi_qc_9.1.vbs
# for windows 64 bit machine
plugin.qc.vbscript_path = C:/Windows/SysWOW64/wscript.exe
# for windows 32 bit machine
#plugin.qc.vbscript_path = "c:\\Windows\\System32\\wscript.exe"

reports.codefolding.enable=true

har_logging.enabled=false

controller.remember_state.enabled=true

selenium_support.enabled=false

applet_support.enabled=false

# inject sahi applet flag
applet.inject=true

# sign applet flag
applet.sign=false

# Use win.proxy.continuous.reset when administrator auto changes it back periodically.
windows.proxy.continuous.reset=false
# in seconds
windows.proxy.continuous.reset.interval=30

mac.proxy.set.cmd=sh $toolsBasePath/changeproxy.sh
mac.proxy.revert.cmd=sh $toolsBasePath/revertproxy.sh
mac.networkserviceorder="Wi-Fi"
#mac.networkserviceorder="AirPort"

cookie.add_sahi_cookie_on_all_pages=true

#define scenario script extension
scenario.extension=.s.csv;xls;xlsx

#Time delay after which browser should be launched after system proxy setting 
browser_launch.delay_after_proxy_change=0

# Sahi express flag
sahi.express.flag=false

# Sahi mark window as inactive after time
sahi.window.active_time=30000

# Sahi lock timeout
sahi.lock.timeout=60000

# If a request fails, Sahi can be asked to retry the request at the proxy level. 
# Set to 2 for 2 retries. Default value is 0 (no retry) 
proxy.failed_request_retry_count=0

#Doc viewer image compression in percentage
sahi.docviewer.image.resize_percentage=100
# Takes GIF, JPG and PNG as valid values; default is PNG
#Doc viewer image format
sahi.docviewer.image.format=png

#TakeScreenShot image compression in percentage
sahi.screenshot.image.resize_percentage=100
# Takes GIF, JPG and PNG as valid values; default is PNG
#TakeScreenpShot viewer image format
sahi.screenshot.image.format=png

# Show latest installer download link on Sahi Start Page
sahi.updates.check=true

# A delay is needed for a window action to happen. Sahi should wait that much before returning from _windowAction API
window_action_api.wait_after_unique_title_set=200
window_action_api.wait_before_title_revert=100
window_action_api.wait_after_unique_title_revert=100

#accessor ignore case property
sahi.accessor.ignore_case=false

#log javascript alert, confirmation and prompt messages in reports
# Takes true or false default is false
log.js.popups=false
# Takes CUSTOM, CUSTOM1, CUSTOM2, CUSTOM3, CUSTOM4 or CUSTOM5, default is blank(no background color)
log.js.popups.color=

#sets delay time after keyrelease in _typeNative on Safari
safari.post.keyrelease.wait.time=10

# Mark this property false to disable check for new versions on sahi start page
sahi_start_page.show_version_update_available.enabled=true

# This file contains user defined functions in userdata/config folder
functions.function_names_file=function_names.txt

#This Contains CSV/Excel Seperator
csv.word_separator=,

# Display attribute type in Alternatives on Controller
controller.display_attribute_type.enabled=false

# File pattern for Accessor Repository files. These are used in filtering AR files in Sahi's UI.
accessor_repository.file_pattern=_AR.sah

# Indicates if attachments should be added when sending mail
mail.send_attachment=true

# Sets the maximum allowed size of attachment(in bytes; 0 -> any size allowed) 
mail.max_allowed_attachment_size=0

editor.metadata.functions.cache.enabled=true

# drun: If a script execution has started but its status cannot be fetched (node is unreachable, for example)
# for drun.fetch_status_failed_retry_count times, the script will be treated as ABORTED.
# Do NOT change this value without consulting Sahi Support. 
drun.fetch_status_failed_retry_count=3

# drun: If a script cannot be executed on a node, say N1, for reasons other than capacity restraints (Node is unreachable),
# its retry count will be incremented. It will then be attempted on other nodes. If other nodes are busy executing scripts
# to their capacity, it will be attempted on N1 again in the next cycle. The retry count will be incremented if it cannot
# be executed on N1 again. This will continue to happen till the retry count reaches drun.execute_failed_retry_count.
# After this count is reached, the script will not be attempted on that node again.
# Do NOT change this value without consulting Sahi Support.
drun.execute_failed_retry_count=3

# Do NOT change this value without consulting Sahi Support.
urlconnection.connect_timeout_in_millis=30000
# Do NOT change this value without consulting Sahi Support.
urlconnection.read_timeout_in_millis=30000

# Set this to true if you want redirects to be followed automatically
# in case of url connections between Sahi's components. 
urlconnection.follow_redirects_internal=false
